swagger: '2.0'
info:
  description: the description of apiinfo.
  version: 1.0.0
  title: Rule Engine Service.
  contact:
    name: openjaw team
    email: heting.zhao@www.com
host: 'localhost:8080'
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: rule management
    description: Interfaces for rule management.
paths:
  /ruleSubscription:
    post:
      tags:
        - rule management
      description: Rule engine subscriber report.
      consumes: []
      operationId: subscribeRules
      parameters:
        - name: subscriberRequest
          in: body
          description: Rule engine subscriber report reuqest.
          schema:
            $ref: '#/definitions/subscriptionRequest'
      responses:
        '200':
          description: successful response of rule engine subscriber report.
          schema:
            $ref: '#/definitions/subscriptionResponse'
        '400':
          $ref: '#/responses/invalidRequest'
        '401':
          $ref: '#/responses/unauthorised'
        '404':
          description: The search results do not exist.
          schema:
            $ref: '#/definitions/errorModel'
        '500':
          $ref: '#/responses/unexpectedError'
  /ruleTable:
    get:
      tags:
        - rule management
      operationId: getTableRule
      description: Load table rule from SDK.
      consumes: []
      parameters:
        - $ref: '#/parameters/bundleName'
        - $ref: '#/parameters/ruleName'
        - $ref: '#/parameters/tenantKey'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: Successful response of loading table rule from SDK
          schema:
            $ref: '#/definitions/tableRuleResponse'
        '400':
          $ref: '#/responses/invalidRequest'
        '401':
          $ref: '#/responses/unauthorised'
        '404':
          description: The search results do not exist.
          schema:
            $ref: '#/definitions/errorModel'
        '500':
          $ref: '#/responses/unexpectedError'
  /ruleBusiness:
    get:
      tags:
        - rule management
      operationId: getBusinessRule
      consumes: []
      description: Load business rule from SDK.
      parameters:
        - $ref: '#/parameters/ruleSetName'
        - $ref: '#/parameters/ruleName'
        - $ref: '#/parameters/tenantKey'
        - $ref: '#/parameters/version'
      responses:
        '200':
          description: Successful response of loading business rule from SDK.
          schema:
            $ref: '#/definitions/businessRuleResponse'
        '400':
          $ref: '#/responses/invalidRequest'
        '401':
          $ref: '#/responses/unauthorised'
        '404':
          description: The search results do not exist.
          schema:
            $ref: '#/definitions/errorModel'
        '500':
          $ref: '#/responses/unexpectedError'
definitions:
  ruleSummary:
    description: Rule summary info of both table rule and business rule.
    type: object
    properties:
      name:
        type: string
        description: The name of a table rule or business rule.
      lastUpdated:
        type: string
        description: Last report time of the rule.
      tenantKey:
        type: string
        description: Code of the tenant.
  ruleGroup:
    description: Rule group entity of table rule or business rule.
    type: object
    properties:
      ruleGroupName:
        type: string
        description: The name indicates table rule's bundle or business rule's ruleset.
      ruleList:
        type: array
        items:
          $ref: '#/definitions/ruleSummary'
        description: The subscribed rules of the group.
      lastUpdated:
        type: string
        description: Last report time of the group.
  subscriptionInfo:
    type: object
    description: A subscription info entity read from subscriber’s own properties.
    properties:
      tableRules:
        type: array
        items:
          $ref: '#/definitions/ruleGroup'
        description: Group list of table rule.
      businessRules:
        type: array
        items:
          $ref: '#/definitions/ruleGroup'
        description: Group list of business rule.
  subscriptionRequest:
    description: The request of subscriber report.
    type: object
    required:
      - name
      - ipAddress
      - subscriptionInfo
    properties:
      key:
        type: string
        description: >-
          UUID that rule engine service generated, null if this is the first
          time.
      name:
        type: string
        description: 'Subscriber service name, read from subscriber’s own properties.'
      ipAddress:
        type: string
        pattern: '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
        description: Subscriber’s IP address.
      lastUpdated:
        type: string
        description: Timestamp of when this subscriber reload itself last time.
      metadata:
        type: string
        description: >-
          metadata of the subscriber it wants to use, such as subscriber’s
          service version.
      subscriptionInfo:
        $ref: '#/definitions/subscriptionInfo'
  subscriptionResponse:
    description: The response of subscriber report.
    type: object
    properties:
      key:
        type: string
        description: >-
          UUID that rule engine service generated, null if this is the first
          time.
      status:
        type: string
        description: success or error (status of the subscription)
      subscriptionInfo:
        $ref: '#/definitions/subscriptionInfo'
  tableRuleDefinition:
    type: object
    description: Table rule definition entity.
    properties:
      id:
        type: string
        description: Identifier.
      group:
        type: string
      name:
        type: string
      version:
        type: string
      definitionContent:
        type: string
      lastUpdated:
        type: string
        description: Timestamp when it’s last updated
      status:
        type: string
        enum:
          - Pending
          - Activated
          - Dropped
      auditId:
        type: integer
        format: int32
        description: Foreign key references to the audit table.
  tableRuleData:
    type: object
    description: Table rule entity.
    properties:
      id:
        type: integer
        format: int32
        description: Identifier
      ruleDefinitionId:
        type: integer
        format: int32
        description: Foreign key.
      ruleContent:
        type: string
        description: XML Clob of rule content.
      tenantKey:
        type: string
      language:
        type: string
      market:
        type: string
  businessRuleSetDefinition:
    type: object
    description: Business rule-set definition entity.
    properties:
      id:
        type: integer
        format: int32
        description: Identifier
      RuleSetName:
        type: string
        description: Business rule set name.
      version:
        type: string
      definitionContent:
        type: string
        description: XML Clob with rule-set definition.
      compiledContent:
        type: string
        format: byte
        description: >-
          Java content compiled from the rule content. Suppose each rule-set
          definition only generates one java file.
      lastUpdated:
        type: string
        description: Timestamp when it’s last updated.
      status:
        type: string
        enum:
          - Pending
          - Activated
          - Dropped
      auditId:
        type: integer
        format: int32
        description: Foreign key references to the audit table.
  businessRule:
    type: object
    description: Business rule entity.
    properties:
      id:
        type: integer
        format: int32
        description: Identifier
      ruleDefinitionId:
        type: integer
        format: int32
        description: Foreign key.
      ruleName:
        type: string
        description: Name of this business rule.
      tenantKey:
        type: string
      ruleContent:
        type: string
        description: >-
          Taken from the latest version of this business rule received from
          Console.
      compiledContent:
        type: string
        format: byte
        description: >-
          Java content compiled from the rule content. Suppose each rule only
          generates one java file.
  tableRuleResponse:
    type: object
    description: Response of loading table rule.
    properties:
      definition:
        type: object
        $ref: '#/definitions/tableRuleDefinition'
      data:
        type: object
        $ref: '#/definitions/tableRuleData'
  businessRuleResponse:
    type: object
    description: Response of loading business rule.
    properties:
      definition:
        type: object
        $ref: '#/definitions/businessRuleSetDefinition'
      contentList:
        type: array
        items:
          type: string
          format: byte
          description: >-
            Java content list compiled from the rule content. Suppose each
            rule-set definition only generates one java file.
  errorModel:
    type: object
    properties:
      apiErrors:
        type: array
        description: list of one or more errors that have occured
        items:
          $ref: '#/definitions/apiError'
  apiError:
    type: object
    required:
      - errorCode
      - userMessage
      - devMessage
    properties:
      errorCode:
        type: string
        description: >-
          A Spring validation code/Openjaw error code/Supplier Error describing
          the type of error
      devMessage:
        type: string
        description: >-
          A message describing the error in more detail to help the developer
          learn more about the issue
      userMessage:
        type: string
        description: >-
          A message describing the error in simple language. May be the same as
          devMessage in some cases
      field:
        type: string
        description: The field which was at fault for the error
parameters:
  bundleName:
    name: bundleName
    in: query
    type: string
    required: true
    description: The name of table rule's bundle.
  ruleSetName:
    name: ruleSetName
    in: query
    type: string
    required: true
    description: The name of business rule's ruleset.
  ruleName:
    name: ruleName
    in: query
    type: string
    required: true
    description: The name of a table rule or business rule.
  tenantKey:
    name: tenantKey
    in: query
    type: string
    description: Code of the tenant.
  version:
    name: version
    in: query
    type: string
    description: Rule version.
responses:
  unexpectedError:
    description: An unexpected error occurred
    schema:
      $ref: '#/definitions/errorModel'
  invalidRequest:
    description: The request was invalid
    schema:
      $ref: '#/definitions/errorModel'
  unauthorised:
    description: User not authorised to access this resource
    schema:
      $ref: '#/definitions/errorModel'