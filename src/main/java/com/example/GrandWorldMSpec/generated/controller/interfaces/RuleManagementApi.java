/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.example.GrandWorldMSpec.generated.controller.interfaces;

import com.example.GrandWorldMSpec.generated.model.BusinessRuleLoadResponse;
import com.example.GrandWorldMSpec.generated.model.SubscriberReport;
import com.example.GrandWorldMSpec.generated.model.TableRuleLoadResponse;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-03-07T20:48:33.284+08:00")

@Api(value = "RuleManagement", description = "the RuleManagement API")
public interface RuleManagementApi {

    Logger log = LoggerFactory.getLogger(RuleManagementApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Load business rule from SDK.", nickname = "getBusinessRule", notes = "Load business rule from SDK.", response = BusinessRuleLoadResponse.class, tags={ "Rule Management", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BusinessRuleLoadResponse.class),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/businessRule",
        method = RequestMethod.GET)
    default ResponseEntity<BusinessRuleLoadResponse> getBusinessRule(@ApiParam(value = "The name of table rule's bundle or business rule's ruleset.",required=true) @PathVariable("ruleGroupName") String ruleGroupName,@ApiParam(value = "The name of a table rule or business rule.",required=true) @PathVariable("ruleName") String ruleName,@ApiParam(value = "Code of the tenant.",required=true) @PathVariable("tenantId") String tenantId,@ApiParam(value = "Rule version.",required=true) @PathVariable("version") String version) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"definition\" : {    \"auditId\" : 6,    \"lastUpdated\" : \"2000-01-23\",    \"definitionContent\" : \"definitionContent\",    \"id\" : 0,    \"RuleSetName\" : \"RuleSetName\",    \"compiledContent\" : \"compiledContent\",    \"version\" : \"version\",    \"status\" : \"Pending\"  },  \"content\" : \"content\"}", BusinessRuleLoadResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default RuleManagementApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Load table rule from SDK.", nickname = "getTableRule", notes = "Load table rule from SDK.", response = TableRuleLoadResponse.class, tags={ "Rule Management", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = TableRuleLoadResponse.class),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/tableRule",
        method = RequestMethod.GET)
    default ResponseEntity<TableRuleLoadResponse> getTableRule(@ApiParam(value = "The name of table rule's bundle or business rule's ruleset.",required=true) @PathVariable("ruleGroupName") String ruleGroupName,@ApiParam(value = "The name of a table rule or business rule.",required=true) @PathVariable("ruleName") String ruleName,@ApiParam(value = "Code of the tenant.",required=true) @PathVariable("tenantId") String tenantId,@ApiParam(value = "Rule version.",required=true) @PathVariable("version") String version,@ApiParam(value = "",required=true) @PathVariable("page") Integer page,@ApiParam(value = "",required=true) @PathVariable("pageSize") Integer pageSize) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"total\" : 5,  \"definition\" : {    \"auditId\" : 0,    \"lastUpdated\" : \"2000-01-23\",    \"definitionContent\" : \"definitionContent\",    \"name\" : \"name\",    \"id\" : \"id\",    \"version\" : \"version\",    \"group\" : \"group\",    \"status\" : \"Pending\"  },  \"rows\" : [ {    \"ruleDefinitionId\" : 1,    \"rowContent\" : \"rowContent\",    \"tenantKey\" : \"tenantKey\",    \"id\" : 6,    \"rowId\" : 5  }, {    \"ruleDefinitionId\" : 1,    \"rowContent\" : \"rowContent\",    \"tenantKey\" : \"tenantKey\",    \"id\" : 6,    \"rowId\" : 5  } ]}", TableRuleLoadResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default RuleManagementApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "rule subscription", nickname = "ruleSubscribe", notes = "rule subscription", response = SubscriberReport.class, tags={ "Rule Management", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = SubscriberReport.class),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/ruleSubscription",
        method = RequestMethod.POST)
    default ResponseEntity<SubscriberReport> ruleSubscribe(@ApiParam(value = "uuid that rule engine service generated, null if this is the first time."  )  @Valid @RequestBody SubscriberReport subscriberReport) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"lastUpdated\" : \"2000-01-23\",  \"metadata\" : \"metadata\",  \"address\" : \"address\",  \"subscriptionInfo\" : {    \"businessRules\" : [ {      \"lastUpdated\" : \"lastUpdated\",      \"ruleGroupName\" : \"ruleGroupName\",      \"ruleList\" : [ {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      }, {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      } ]    }, {      \"lastUpdated\" : \"lastUpdated\",      \"ruleGroupName\" : \"ruleGroupName\",      \"ruleList\" : [ {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      }, {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      } ]    } ],    \"tableRules\" : [ {      \"lastUpdated\" : \"lastUpdated\",      \"ruleGroupName\" : \"ruleGroupName\",      \"ruleList\" : [ {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      }, {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      } ]    }, {      \"lastUpdated\" : \"lastUpdated\",      \"ruleGroupName\" : \"ruleGroupName\",      \"ruleList\" : [ {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      }, {        \"lastUpdated\" : \"2000-01-23\",        \"name\" : \"name\",        \"tenantCode\" : \"tenantCode\"      } ]    } ]  },  \"name\" : \"name\",  \"key\" : \"key\",  \"status\" : \"status\"}", SubscriberReport.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default RuleManagementApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
